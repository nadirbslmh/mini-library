version: '3.7'

services:
  auth-service:
    build: 
      context: ./auth
      dockerfile: ./auth.dockerfile
    ports:
      - 8083
    restart: on-failure
    networks:
      - service-network
    depends_on:
      - mariadb-service

  book-service:
    build: 
      context: ./book
      dockerfile: ./book.dockerfile
    ports:
      - 8081
    restart: on-failure
    networks:
      - service-network
    depends_on:
      - mariadb-service
  
  rent-service:
    build: 
      context: ./rent
      dockerfile: ./rent.dockerfile
    ports:
      - 8082
    restart: on-failure
    networks:
      - service-network
    depends_on:
      - mariadb-service

  library-service:
    build: 
      context: ./library
      dockerfile: ./library.dockerfile
    ports:
      - 8080:8080
    restart: on-failure
    networks:
      - service-network

  logging-service:
    build: 
      context: ./logging
      dockerfile: ./logging.dockerfile
    ports:
      - 8085
    restart: on-failure
    networks:
      - service-network

  listener-service:
    build: 
      context: ./listener
      dockerfile: ./listener.dockerfile
    ports:
      - 8085
    restart: on-failure
    networks:
      - service-network
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - service-network

  kafka-service:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-service
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-service:9092,PLAINTEXT_INTERNAL://kafka-service:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - service-network

  consul-service:
    image: consul:latest
    ports:
      - 8500
    networks:
      - service-network
  
  mariadb-service:
    image: mariadb:latest
    environment:
      - MARIADB_ROOT_PASSWORD=password
    ports:
      - 3306
    volumes:
      - ./mariadb/schema.sql:/data/application/init.sql
    command: --init-file /data/application/init.sql
    networks:
      - service-network
  
  mongodb-service:
    image: mongo:latest
    ports:
      - 27017
    networks:
      - service-network

networks:
  service-network:
    driver: bridge